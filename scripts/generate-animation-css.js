#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

const INPUT = path.resolve(__dirname, '../src/lib/game-engine/animation-durations.ts');
const OUTPUT_DIR = path.resolve(__dirname, '../src/styles/generated');
const OUTPUT = path.join(OUTPUT_DIR, 'animation-durations.css');

function readInput() {
  return fs.readFileSync(INPUT, 'utf8');
}

function extractValues(tsContent) {
  // 単純パース: ATTACK/DAMAGE/DESTROY の数値を抽出
  const results = {};
  const keys = ['ATTACK', 'DAMAGE', 'DESTROY'];
  keys.forEach(k => {
    const re = new RegExp(k + '\\s*:\\s*([0-9]+)', 'm');
    const m = tsContent.match(re);
    if (m && m[1]) {
      results[k] = parseInt(m[1], 10);
    }
  });
  return results;
}

function msToSecondsString(ms) {
  const s = ms / 1000;
  return s % 1 === 0 ? `${s.toFixed(0)}s` : `${s.toFixed(2)}s`;
}

function generateCssMap(values) {
  const attack = values.ATTACK || 300;
  const damage = values.DAMAGE || 1000;
  const destroy = values.DESTROY || 1000;

  return `/* generated by scripts/generate-animation-css.js - DO NOT EDIT */\n:root {\n  --ah-attack-duration: ${msToSecondsString(attack)};\n  --ah-damage-duration: ${msToSecondsString(damage)};\n  --ah-destroy-duration: ${msToSecondsString(destroy)};\n}\n`;
}

function ensureDir(dir) {
  if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
}

function main() {
  try {
    const content = readInput();
    const values = extractValues(content);
    const css = generateCssMap(values);
    ensureDir(OUTPUT_DIR);

    // 書き込みは変更がある場合のみ
    if (fs.existsSync(OUTPUT) && fs.readFileSync(OUTPUT, 'utf8') === css) {
      console.log('No changes to animation CSS.');
      return;
    }

    fs.writeFileSync(OUTPUT, css, 'utf8');
    console.log(`Generated ${OUTPUT}`);
  } catch (err) {
    console.error('Failed to generate animation CSS:', err);
    process.exit(1);
  }
}

if (require.main === module) main();
